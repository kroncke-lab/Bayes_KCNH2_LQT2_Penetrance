lit.nonoverlap.data[lit.nonoverlap.data$lqt2/lit.nonoverlap.data$unaff < 0.2,]
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"] <- lit.nonoverlap.data$unaff
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,]
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"var"]
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"] <- lit.nonoverlap.data$unaff
View(lit.nonoverlap.data)
length(lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"])
length(lit.nonoverlap.data$unaff)
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"] <- lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"unaff"]
lit.nonoverlap.data$unaff<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$gnomAD
lit.nonoverlap.data$lqt2<-lit.nonoverlap.data$unaff
# mut_type has includes type and isoform for all variants in the literature and in the cohort.
mut_type <- mut_type[mut_type$mut_type == "missense",]
# Cohort carrier/heterozygote counts and variant IDs.
# Here we select only the missense variants (in-frame indels are also included as "missense")
cohort.data <- cohort.data[cohort.data$mut_type == "missense" & cohort.data$total_carriers > 0,]
# Literature dataset where potentially overlapping carriers/heterozygotes are removed
d <- lit.nonoverlap.data[lit.nonoverlap.data$mut_type == "missense",]
# Here, heterozygotes/carriers from gnomAD are removed to test their influence on performance
# Remove comments in next two lines and complete subsequent evaluation to assess influence of gnomAD on
# calculations.
#d$total_carriers <- d$total_carriers - d$gnomAD # test influence of gnomAD
#d$unaff <- d$total_carriers - d$lqt2 # test influence of gnomAD
# set initial weighting and penetrance
d$weight = 1-1/(0.01+d$total_carriers)
d$penetrance_lqt2 <- d$lqt2/d$total_carriers
d[d$total_carriers < 1,"weight"] <- 0.000 # This is changed to "< 2" when evaluating ROC-AUC of n=1 variants from the literature
# Mean squared error
mse <- function(sm) {
mean((sm$residuals)^2*(sm$weights))
}
# Weighted mean to determine LQT2 penetrance empirical prior
newdata = data.frame(wt=1)
model <- lm(penetrance_lqt2 ~ 1, data=d, weights = d$weight)
summary(model)
p<-predict(model, newdata)
dev<- mse(model)#p*(1-p)
# Derive alpha and beta from weighted mean and MSE (estimated variance)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
# Estimated shape parameters for LQT2 empirical prior
alpha0 = estBetaParams(p,dev)$alpha
beta0 = estBetaParams(p,dev)$beta
print(paste("alpha0 = ", alpha0, "  beta0 = ", beta0))
# Bayesian LQT2 penetrance estimates from empirical priors
# and observed affected/unaffected counts:
d$lqt2_penetranceBayesian_initial <- (alpha0 + d[,"lqt2"])/((alpha0 + beta0 + d[,"total_carriers"]))
d$lqt2_penetranceBayesian<-d$lqt2_penetranceBayesian_initial
# Plot literature observed LQT2 penetrance versus residue number
m<- d %>%
select(resnum, pmean = penetrance_lqt2) %>%
mutate(p_mean_smooth = rollmean(pmean, k=20, fill = NA))
fit <- loess(d[,"penetrance_lqt2"]~as.numeric(d[,"resnum"]), span = 0.15)
plot(d$resnum, d$penetrance_lqt2, xlab ="Residue", ylab = "LQT2 Penetrance Estimate")
xrange <- seq(min(fit$x), max(fit$x), length.out = 100)
ps <- predict(fit, xrange, se=T)
lines(xrange, ps$fit*1, lwd=5)
lines(xrange, (ps$fit+1.96*ps$se.fit)*1, lty=2, lwd=4)
lines(xrange, (ps$fit-1.96*ps$se.fit)*1, lty=2, lwd=4)
knitr::opts_chunk$set(echo = TRUE)
library("nnet")
library("DBI")
library("RSQLite")
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret)
library(plotrix)
library(glmnet)
library(meta)
library(reshape2)
library(psych)
require(Hmisc)
library(tableone)
library(wCorr)
library(rms)
library(boot)
library(leaps)
library(car)
library(reticulate)
library(rootSolve)
library(pROC)
library(wCorr)
library(MALDIquant)
library(tidyverse)      # data manipulation and visualization
library(lubridate)      # easily work with dates and times
library(fpp2)           # working with time series data
library(zoo)            # working with time series data
library(latex2exp)
setwd("/Users/KRONCKE/Box Sync/Kroncke_Lab/GitHub/Bayes_KCNH2_LQT2_Penetrance/")
source('func_dist_seq.R')
load("prepared_data.RData")
# Include distances between residue centroids from the structure of KV11.1 (KCNH2 protein product) PDB-ID: 5VA1
h2dist<-read.csv(file = "5va1.dists.txt", header = FALSE)
# gnomad as controls and unaffected as affected.
lit.nonoverlap.data$total_carriers<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$lqt2
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"] <- lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"unaff"]
lit.nonoverlap.data$unaff<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$gnomAD
#lit.nonoverlap.data$lqt2<-lit.nonoverlap.data$unaff
# mut_type has includes type and isoform for all variants in the literature and in the cohort.
mut_type <- mut_type[mut_type$mut_type == "missense",]
# Cohort carrier/heterozygote counts and variant IDs.
# Here we select only the missense variants (in-frame indels are also included as "missense")
cohort.data <- cohort.data[cohort.data$mut_type == "missense" & cohort.data$total_carriers > 0,]
# Literature dataset where potentially overlapping carriers/heterozygotes are removed
d <- lit.nonoverlap.data[lit.nonoverlap.data$mut_type == "missense",]
# Here, heterozygotes/carriers from gnomAD are removed to test their influence on performance
# Remove comments in next two lines and complete subsequent evaluation to assess influence of gnomAD on
# calculations.
#d$total_carriers <- d$total_carriers - d$gnomAD # test influence of gnomAD
#d$unaff <- d$total_carriers - d$lqt2 # test influence of gnomAD
# set initial weighting and penetrance
d$weight = 1-1/(0.01+d$total_carriers)
d$penetrance_lqt2 <- d$lqt2/d$total_carriers
d[d$total_carriers < 1,"weight"] <- 0.000 # This is changed to "< 2" when evaluating ROC-AUC of n=1 variants from the literature
# Mean squared error
mse <- function(sm) {
mean((sm$residuals)^2*(sm$weights))
}
# Weighted mean to determine LQT2 penetrance empirical prior
newdata = data.frame(wt=1)
model <- lm(penetrance_lqt2 ~ 1, data=d, weights = d$weight)
summary(model)
p<-predict(model, newdata)
dev<- mse(model)#p*(1-p)
# Derive alpha and beta from weighted mean and MSE (estimated variance)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
# Estimated shape parameters for LQT2 empirical prior
alpha0 = estBetaParams(p,dev)$alpha
beta0 = estBetaParams(p,dev)$beta
print(paste("alpha0 = ", alpha0, "  beta0 = ", beta0))
# Bayesian LQT2 penetrance estimates from empirical priors
# and observed affected/unaffected counts:
d$lqt2_penetranceBayesian_initial <- (alpha0 + d[,"lqt2"])/((alpha0 + beta0 + d[,"total_carriers"]))
d$lqt2_penetranceBayesian<-d$lqt2_penetranceBayesian_initial
# Plot literature observed LQT2 penetrance versus residue number
m<- d %>%
select(resnum, pmean = penetrance_lqt2) %>%
mutate(p_mean_smooth = rollmean(pmean, k=20, fill = NA))
fit <- loess(d[,"penetrance_lqt2"]~as.numeric(d[,"resnum"]), span = 0.15)
plot(d$resnum, d$penetrance_lqt2, xlab ="Residue", ylab = "LQT2 Penetrance Estimate")
xrange <- seq(min(fit$x), max(fit$x), length.out = 100)
ps <- predict(fit, xrange, se=T)
lines(xrange, ps$fit*1, lwd=5)
lines(xrange, (ps$fit+1.96*ps$se.fit)*1, lty=2, lwd=4)
lines(xrange, (ps$fit-1.96*ps$se.fit)*1, lty=2, lwd=4)
View(d)
knitr::opts_chunk$set(echo = TRUE)
library("nnet")
library("DBI")
library("RSQLite")
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret)
library(plotrix)
library(glmnet)
library(meta)
library(reshape2)
library(psych)
require(Hmisc)
library(tableone)
library(wCorr)
library(rms)
library(boot)
library(leaps)
library(car)
library(reticulate)
library(rootSolve)
library(pROC)
library(wCorr)
library(MALDIquant)
library(tidyverse)      # data manipulation and visualization
library(lubridate)      # easily work with dates and times
library(fpp2)           # working with time series data
library(zoo)            # working with time series data
library(latex2exp)
setwd("/Users/KRONCKE/Box Sync/Kroncke_Lab/GitHub/Bayes_KCNH2_LQT2_Penetrance/")
source('func_dist_seq.R')
load("prepared_data.RData")
# Include distances between residue centroids from the structure of KV11.1 (KCNH2 protein product) PDB-ID: 5VA1
h2dist<-read.csv(file = "5va1.dists.txt", header = FALSE)
# gnomad as controls and unaffected as affected.
lit.nonoverlap.data$total_carriers<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$lqt2
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"] <- lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"unaff"]
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) >= 0.2,"lqt2"] <- 0
lit.nonoverlap.data$unaff<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$gnomAD
#lit.nonoverlap.data$lqt2<-lit.nonoverlap.data$unaff
View(lit.nonoverlap.data)
knitr::opts_chunk$set(echo = TRUE)
library("nnet")
library("DBI")
library("RSQLite")
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret)
library(plotrix)
library(glmnet)
library(meta)
library(reshape2)
library(psych)
require(Hmisc)
library(tableone)
library(wCorr)
library(rms)
library(boot)
library(leaps)
library(car)
library(reticulate)
library(rootSolve)
library(pROC)
library(wCorr)
library(MALDIquant)
library(tidyverse)      # data manipulation and visualization
library(lubridate)      # easily work with dates and times
library(fpp2)           # working with time series data
library(zoo)            # working with time series data
library(latex2exp)
setwd("/Users/KRONCKE/Box Sync/Kroncke_Lab/GitHub/Bayes_KCNH2_LQT2_Penetrance/")
source('func_dist_seq.R')
load("prepared_data.RData")
# Include distances between residue centroids from the structure of KV11.1 (KCNH2 protein product) PDB-ID: 5VA1
h2dist<-read.csv(file = "5va1.dists.txt", header = FALSE)
# gnomad as controls and unaffected as affected.
lit.nonoverlap.data$total_carriers<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$lqt2
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) >= 0.2,"lqt2"] <- 0
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"] <- lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"unaff"]
lit.nonoverlap.data$unaff<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$gnomAD
#lit.nonoverlap.data$lqt2<-lit.nonoverlap.data$unaff
View(lit.nonoverlap.data)
View(lit.cohort.data)
knitr::opts_chunk$set(echo = TRUE)
library("nnet")
library("DBI")
library("RSQLite")
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret)
library(plotrix)
library(glmnet)
library(meta)
library(reshape2)
library(psych)
require(Hmisc)
library(tableone)
library(wCorr)
library(rms)
library(boot)
library(leaps)
library(car)
library(reticulate)
library(rootSolve)
library(pROC)
library(wCorr)
library(MALDIquant)
library(tidyverse)      # data manipulation and visualization
library(lubridate)      # easily work with dates and times
library(fpp2)           # working with time series data
library(zoo)            # working with time series data
library(latex2exp)
setwd("/Users/KRONCKE/Box Sync/Kroncke_Lab/GitHub/Bayes_KCNH2_LQT2_Penetrance/")
source('func_dist_seq.R')
load("prepared_data.RData")
# Include distances between residue centroids from the structure of KV11.1 (KCNH2 protein product) PDB-ID: 5VA1
h2dist<-read.csv(file = "5va1.dists.txt", header = FALSE)
# gnomad as controls and unaffected as affected.
lit.nonoverlap.data$unaff<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$gnomAD
lit.nonoverlap.data$total_carriers<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$lqt2
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) >= 0.2,"lqt2"] <- 0
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"] <- lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"unaff"]
lit.nonoverlap.data$unaff<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$gnomAD
#lit.nonoverlap.data$lqt2<-lit.nonoverlap.data$unaff
View(lit.nonoverlap.data)
View(lit.cohort.data)
knitr::opts_chunk$set(echo = TRUE)
library("nnet")
library("DBI")
library("RSQLite")
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret)
library(plotrix)
library(glmnet)
library(meta)
library(reshape2)
library(psych)
require(Hmisc)
library(tableone)
library(wCorr)
library(rms)
library(boot)
library(leaps)
library(car)
library(reticulate)
library(rootSolve)
library(pROC)
library(wCorr)
library(MALDIquant)
library(tidyverse)      # data manipulation and visualization
library(lubridate)      # easily work with dates and times
library(fpp2)           # working with time series data
library(zoo)            # working with time series data
library(latex2exp)
setwd("/Users/KRONCKE/Box Sync/Kroncke_Lab/GitHub/Bayes_KCNH2_LQT2_Penetrance/")
source('func_dist_seq.R')
load("prepared_data.RData")
# Include distances between residue centroids from the structure of KV11.1 (KCNH2 protein product) PDB-ID: 5VA1
h2dist<-read.csv(file = "5va1.dists.txt", header = FALSE)
# gnomad as controls and unaffected as affected.
lit.nonoverlap.data$unaff<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$gnomAD
lit.nonoverlap.data$total_carriers<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$lqt2
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) >= 0.2,"lqt2"] <- 0
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"lqt2"] <- lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) < 0.2,"unaff"]
View(lit.nonoverlap.data)
knitr::opts_chunk$set(echo = TRUE)
library("nnet")
library("DBI")
library("RSQLite")
library(dplyr)
library(ggplot2)
library(ggpubr)
library(caret)
library(plotrix)
library(glmnet)
library(meta)
library(reshape2)
library(psych)
require(Hmisc)
library(tableone)
library(wCorr)
library(rms)
library(boot)
library(leaps)
library(car)
library(reticulate)
library(rootSolve)
library(pROC)
library(wCorr)
library(MALDIquant)
library(tidyverse)      # data manipulation and visualization
library(lubridate)      # easily work with dates and times
library(fpp2)           # working with time series data
library(zoo)            # working with time series data
library(latex2exp)
setwd("/Users/KRONCKE/Box Sync/Kroncke_Lab/GitHub/Bayes_KCNH2_LQT2_Penetrance/")
source('func_dist_seq.R')
load("prepared_data.RData")
# Include distances between residue centroids from the structure of KV11.1 (KCNH2 protein product) PDB-ID: 5VA1
h2dist<-read.csv(file = "5va1.dists.txt", header = FALSE)
# gnomad as controls and unaffected as affected.
lit.nonoverlap.data$unaff<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$gnomAD
lit.nonoverlap.data$total_carriers<-lit.nonoverlap.data$total_carriers - lit.nonoverlap.data$lqt2
#where penetrance is < 20% ?
lit.nonoverlap.data[lit.nonoverlap.data$lqt2/(0.01+lit.nonoverlap.data$unaff) >= 0.2,c("lqt2","unaff")] <- 0
lit.nonoverlap.data[lit.nonoverlap.data$lqt2 != 0 | lit.nonoverlap.data$unaff != 0,"lqt2"] <- lit.nonoverlap.data[lit.nonoverlap.data$lqt2 != 0 | lit.nonoverlap.data$unaff != 0,"unaff"]
lit.nonoverlap.data$unaff <- lit.nonoverlap.data$gnomAD
lit.nonoverlap.data$total_carriers<-lit.nonoverlap.data$gnomAD + lit.nonoverlap.data$lqt2
View(lit.nonoverlap.data)
# mut_type has includes type and isoform for all variants in the literature and in the cohort.
mut_type <- mut_type[mut_type$mut_type == "missense",]
# Cohort carrier/heterozygote counts and variant IDs.
# Here we select only the missense variants (in-frame indels are also included as "missense")
cohort.data <- cohort.data[cohort.data$mut_type == "missense" & cohort.data$total_carriers > 0,]
# Literature dataset where potentially overlapping carriers/heterozygotes are removed
d <- lit.nonoverlap.data[lit.nonoverlap.data$mut_type == "missense",]
# Here, heterozygotes/carriers from gnomAD are removed to test their influence on performance
# Remove comments in next two lines and complete subsequent evaluation to assess influence of gnomAD on
# calculations.
#d$total_carriers <- d$total_carriers - d$gnomAD # test influence of gnomAD
#d$unaff <- d$total_carriers - d$lqt2 # test influence of gnomAD
# set initial weighting and penetrance
d$weight = 1-1/(0.01+d$total_carriers)
d$penetrance_lqt2 <- d$lqt2/d$total_carriers
d[d$total_carriers < 1,"weight"] <- 0.000 # This is changed to "< 2" when evaluating ROC-AUC of n=1 variants from the literature
# Mean squared error
mse <- function(sm) {
mean((sm$residuals)^2*(sm$weights))
}
# Weighted mean to determine LQT2 penetrance empirical prior
newdata = data.frame(wt=1)
model <- lm(penetrance_lqt2 ~ 1, data=d, weights = d$weight)
summary(model)
p<-predict(model, newdata)
dev<- mse(model)#p*(1-p)
# Derive alpha and beta from weighted mean and MSE (estimated variance)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
# Estimated shape parameters for LQT2 empirical prior
alpha0 = estBetaParams(p,dev)$alpha
beta0 = estBetaParams(p,dev)$beta
print(paste("alpha0 = ", alpha0, "  beta0 = ", beta0))
# Bayesian LQT2 penetrance estimates from empirical priors
# and observed affected/unaffected counts:
d$lqt2_penetranceBayesian_initial <- (alpha0 + d[,"lqt2"])/((alpha0 + beta0 + d[,"total_carriers"]))
d$lqt2_penetranceBayesian<-d$lqt2_penetranceBayesian_initial
# Plot literature observed LQT2 penetrance versus residue number
m<- d %>%
select(resnum, pmean = penetrance_lqt2) %>%
mutate(p_mean_smooth = rollmean(pmean, k=20, fill = NA))
fit <- loess(d[,"penetrance_lqt2"]~as.numeric(d[,"resnum"]), span = 0.15)
plot(d$resnum, d$penetrance_lqt2, xlab ="Residue", ylab = "LQT2 Penetrance Estimate")
xrange <- seq(min(fit$x), max(fit$x), length.out = 100)
ps <- predict(fit, xrange, se=T)
lines(xrange, ps$fit*1, lwd=5)
lines(xrange, (ps$fit+1.96*ps$se.fit)*1, lty=2, lwd=4)
lines(xrange, (ps$fit-1.96*ps$se.fit)*1, lty=2, lwd=4)
# NOTE: adjust 3rd argument given to funcdist, "d,", to d[d$total_carriers>1,] when
# evaluating ROC of total_carriers == 1
h2.covariates[, "lqt2_dist"]<-NA
h2.covariates[, "lqt2_dist_weight"]<-NA
mut_type <- mut_type[mut_type$mut_type == "missense" & mut_type$isoform == "A",]
for(rec in 1:nrow(mut_type)){
if (!is.na(mut_type[rec, "resnum"])) {
l<-length(h2.covariates[h2.covariates$var == mut_type[rec, "var"],"var"])
for (m in 1:l){
h2.covariates[h2.covariates$var == mut_type[rec, "var"],
c("lqt2_dist", "lqt2_dist_weight", "resnum")][m,] <- c(funcdist(mut_type[rec, "resnum"], mut_type[rec, "var"], d, h2dist, "penetrance_lqt2", "sigmoid", 7), mut_type[rec, "resnum"])
}
}
}
# Plot lqt2_dist versus residue number
h2.covariates$resnum<-as.integer(h2.covariates$resnum)
h2.covariates <- h2.covariates[order(h2.covariates$resnum),]
h2.covariates <- h2.covariates[!is.na(h2.covariates$resnum),]
m<- h2.covariates %>%
select(resnum, pmean = lqt2_dist) %>%
mutate(p_mean_smooth = rollmean(pmean, k=20, fill = NA))
fit <- loess(h2.covariates[,"lqt2_dist"]~as.numeric(h2.covariates[,"resnum"]), span = 0.15)
plot(h2.covariates$resnum, h2.covariates$lqt2_dist, xlab ="Residue", ylab = "LQT2 Penetrance Density", xlim=c(0,1160))
xrange <- seq(min(fit$x), max(fit$x), length.out = 100)
ps <- predict(fit, xrange, se=T)
lines(xrange, ps$fit*1, lwd=5)
lines(xrange, (ps$fit+1.96*ps$se.fit)*1, lty=2, lwd=4)
lines(xrange, (ps$fit-1.96*ps$se.fit)*1, lty=2, lwd=4)
# Merge "d" with full variant list and set carrier counts to 0.
# This is done for convenience so  we can estimate LQT2 penetrance for all variants including
# those witheld during model construction. This will make validation easier.
d <- merge(d, h2.covariates, all = TRUE)
d <- unique(d)
calcPval=function(xName,yName,weightName,nPerms,new.mat2){
# Pulls out variables
x=new.mat2[,xName]
y=new.mat2[,yName]
w=new.mat2[,weightName]
x2=x[!is.na(x)]
y2=y[!is.na(x)]
w2=w[!is.na(x)]
# Calculate the real correlation
realCorr=weightedCorr(x2,y2,method='spearman',weights=w2)
# Do permutations, calculate fake correlations
permutedCorrList=c()
for(permNum in 1:nPerms){
permutedX=sample(x2,length(x2),replace=FALSE)
wCorrSim=weightedCorr(permutedX,y2,method='spearman',weights=w2)
permutedCorrList=c(permutedCorrList,wCorrSim)
}
permutedCorrList2=abs(permutedCorrList)
realCorr2=abs(realCorr)
# Calculate pvalue
summ=sum(realCorr2<permutedCorrList2)
pValue=summ/nPerms
return(list(realCorr,pValue,length(x2)))
}
calcAllPvals=function(yList,xList,nPerms,weightName,new.mat2){
i=0
resultTable=data.frame()
for(yName in yList){
for(xName in xList){
i=i+1
result=calcPval(xName,yName,weightName,nPerms,new.mat2)
resultTable[i,'x']=xName
resultTable[i,'y']=yName
resultTable[i,'nPerms']=nPerms
resultTable[i,'weightedCorr']=result[[1]]
resultTable[i,'pValue']=result[[2]]
resultTable[i,'n']=result[[3]]
#print(resultTable[i,'pValue'])
}
}
print(resultTable)
return(resultTable)
}
yList=c('penetrance_lqt2')
xList=c('hm_ssPeak','hm_tailPeak','hm_vhalfact','hm_vhalfinact','hm_recovfrominact', 'hm_taudeact_fast',
'ht_ssPeak','ht_tailPeak','ht_vhalfact','ht_vhalfinact','ht_recovfrominact', 'ht_taudeact_fast',
'pph2_prob', 'provean_score', "blast_pssm",
'pamscore', 'aasimilaritymat', "lqt2_dist", "revel_score")
tmp<-d[!is.na(d$penetrance_lqt2) & !is.na(d$revel_score),]
resultTable<-calcAllPvals(yList, xList, 1000, 'weight', tmp)
tmp<-d[!is.na(d$ht_tailPeak) & !is.na(d$penetrance_lqt2) & !is.na(d$revel_score),]
resultTable<-calcAllPvals(yList, xList, 1000, 'weight', tmp)
